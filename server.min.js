const express=require("express"),path=require("path"),favicon=require("serve-favicon"),createError=require("http-errors"),app=express(),http=require("http"),server=http.createServer(app),ejs=require("ejs"),PORT=process.env.PORT||3e3,mongoose=require("mongoose"),dotenv=require("dotenv").config(),session=require("express-session"),flash=require("express-flash"),MongoDbstore=require("connect-mongo")(session),passport=require("passport"),Emitter=require("events"),io=require("socket.io").listen(server),url="mongodb://localhost/parcour";mongoose.connect(process.env.DB_CONNECTION,{useNewUrlParser:!0,useCreateIndex:!0,useUnifiedTopology:!0,useFindAndModify:!1});const connection=mongoose.connection;connection.once("open",()=>{console.log("Database connected...")}).catch(e=>{console.log("Connection failed...")});let mongoStore=new MongoDbstore({mongooseConnection:connection,collection:"sessions"});const eventEmitter=new Emitter;app.set("eventEmitter",eventEmitter),app.use(session({secret:process.env.COOKIE_SECRET,resave:!1,saveUninitialized:!1,store:mongoStore,cookie:{maxAge:864e5}}));const passportInit=require("./app/config/passport");passportInit(passport),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express.static("public")),app.use(express.urlencoded({extended:!1})),app.use(express.json()),app.use((e,o,s)=>{o.locals.session=e.session,o.locals.user=e.user,s()}),app.set("views",path.join(__dirname,"/resources/views")),app.set("view engine","ejs"),require("./routes/web")(app),require("./routes/error")(app),server.listen(process.env.PORT||3e3,()=>{console.log(`listening on port ${PORT}`)}),io.on("connection",e=>{console.log(e.id),e.on("join",o=>{e.join(o)})}),eventEmitter.on("parcelUpdated",e=>{io.to(`order_${e.id}`).emit("parcelUpdated",e)}),eventEmitter.on("parcelBooked",e=>{io.to("spRoom").emit("parcelBooked",e)}),eventEmitter.on("parcelDelivery",e=>{io.to("rRoom").emit("parcelDelivery",e)});