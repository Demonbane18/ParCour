function orderController(){return{index(e,r){const s=e.session.ordersearched,d=e.session.term_order;if(e.session.term_order=null,s)return orders=s,e.xhr?r.json(orders):r.render("service_provider/orders",{term_order:d});order.find({status:{$nin:["completed","cancelled"]},service_provider:e.user.company_name},null,{sort:{createdAt:-1}}).populate("supplier_id","-password").exec((s,d)=>e.xhr?r.json(d):(e.session.ordersearched=null,r.render("service_provider/orders",{term_order:null})))},async searchOrder(e,r){const{term_order:s}=e.body;if(!s)return e.session.ordersearched=null,r.redirect("/service_provider/orders");await order.find({$text:{$search:s},service_provider:e.user.company_name,status:{$nin:["completed","cancelled"]}},{score:{$meta:"textScore"}},(s,d)=>s?(e.flash("error","Error! Something went wrong"),r.redirect("/service_provider/orders")):d.length?void 0:(e.flash("error","no text"),e.session.ordersearched=null,e.session.term_order=null,r.redirect("/service_provider/orders"))).sort({score:{$meta:"textScore"}}).populate("supplier_id","-password").exec((d,i)=>d?(e.flash("error","Error! Something went wrong"),r.redirect("/service_provider/orders")):(e.session.ordersearched=i,e.session.term_order=s,r.redirect("/service_provider/orders")))},complete(e,r){order.find({status:{$eq:"completed"},service_provider:e.user.company_name},null,{sort:{createdAt:-1}}).populate("supplier_id","-password").exec((s,d)=>e.xhr?r.json(d):r.render("service_provider/completed_orders"))},cancel(e,r){order.find({status:{$eq:"cancelled"},service_provider:e.user.company_name},null,{sort:{createdAt:-1}}).populate("supplier_id","-password").exec((s,d)=>e.xhr?r.json(d):r.render("service_provider/cancelled_orders"))},async assignRider(e,r){const s=e.session.ridersearched,d=e.session.term_rider;e.session.term_rider=null,e.session.ridersearched=null;const i=await Rider.find({company_name:e.user.company_name}),o=e.session.riderassigned;e.session.riderassigned=null,Order.findById(e.params.id,(e,n)=>{if(e)return console.log(e);r.render("service_provider/assign_rider",{riders:i,order:n,id:n._id,tracking_id:n.tracking_id,riderAssigned:o,searchedRider:s,term_rider:d})})},async searchRider(e,r){const{term_rider:s}=e.body,d=e.params.id;if(!s)return r.redirect("/service_provider/assign_rider/"+d);await Rider.find({$text:{$search:s},company_name:e.user.company_name},{score:{$meta:"textScore"}},(i,o)=>{if(i)return e.flash("error","Error! Something went wrong"),r.redirect("/service_provider/assign_rider/"+d);o.length||e.flash("blank",s)}).sort({score:{$meta:"textScore"}}).then(i=>(e.session.ridersearched=i,e.session.term_rider=s,r.redirect("/service_provider/assign_rider/"+d))).catch(s=>(e.flash("error","Error! Something went wrong"),r.redirect("/service_provider/assign_rider/"+d)))},async assign(e,r){const{id:s,id1:d}=e.params,i=await Order.findById(s),o=await Rider.findById(d);i.delivered_by=o.name,i.status="confirmed",i.save().then(s=>(e.flash("success","Rider assigned successfully"),r.redirect("/service_provider/orders"))).catch(d=>(e.flash("error","Something went wrong"),r.redirect("/service_provider/assign_rider/"+s)))}}}const order=require("../../../models/order"),Order=require("../../../models/order"),Rider=require("../../../models/rider"),User=require("../../../models/user");module.exports=orderController;