function vehicleController(){return{async index(e,r){const i=e.session.vehicleadded,l=e.session.vehiclesearched,c=e.session.term_vehicle;e.session.term_vehicle=null,e.session.vehiclesearched=null,e.session.vehicleadded=null;const s=await Vehicle.find({service_provider:e.user.company_name});return r.render("service_provider/vehicles",{vehicles:s,vehicleAdded:i,searchedVehicle:l,term:c})},async search(e,r){const{term:i}=e.body;if(!i)return r.redirect("/service_provider/vehicles");await Vehicle.find({$text:{$search:i},service_provider:e.user.company_name},{score:{$meta:"textScore"}},(l,c)=>{if(l)return e.flash("error","Error! Something went wrong"),r.redirect("/service_provider/vehicles");c.length||e.flash("blank",i)}).sort({score:{$meta:"textScore"}}).then(l=>(e.session.vehiclesearched=l,e.session.term_vehicle=i,r.redirect("/service_provider/vehicles"))).catch(i=>(e.flash("error","Error! Something went wrong"),r.redirect("/service_provider/vehicles")))},async addVehicle(e,r){const i=e.user.company_name,l=await Parcel.find({service_provider:i});return r.render("service_provider/add_vehicle",{parcels:l})},async store(e,r){const{vehicle_type:i,color:l,brand:c,car_model:s,plate_number:a,image:o,weight:d}=e.body;if(!(l&&c&&s&&a&&o&&d))return e.flash("error","All fields are required!"),e.flash("color",l),e.flash("brand",c),e.flash("model",s),e.flash("plate_number",a),e.flash("image",o),e.flash("weight",d),r.redirect("/service_provider/add_vehicle");Vehicle.exists({plate_number:a},(a,h)=>{if(h)return e.flash("error","There's already another vehicle that have the same plate number!"),e.flash("vehicle_type",i),e.flash("color",l),e.flash("brand",c),e.flash("model",s),e.flash("image",o),e.flash("weight",d),r.redirect("/service_provider/add_vehicle")});const h=new Vehicle({vehicle_type:i,color:l,brand:c,car_model:s,plate_number:a,service_provider:e.user.company_name,image:o,weight:d});h.save().then(i=>(e.session.vehicleadded=!0,r.redirect("/service_provider/vehicles"))).catch(i=>(e.flash("error","Something went wrong!"),r.redirect("/service_provider/add_vehicle")))},async editVehicle(e,r){const i=e.session.vehicleedited;e.session.vehicleedited=null;const l=e.user.company_name,c=await Parcel.find({service_provider:l});Vehicle.findById(e.params.id,(l,s)=>{if(l)return console.log(l);r.render("service_provider/edit_vehicle",{id:s._id,vehicle_type:s.vehicle_type,color:s.color,brand:s.brand,car_model:s.car_model,plate_number:s.plate_number,service_provider:e.user.company_name,image:s.image,weight:s.weight,parcels:c,vehicleEdited:i})})},async edit(e,r){var i=e.params.id;const{vehicle_type:l,color:c,brand:s,car_model:a,plate_number:o,image:d,weight:h}=e.body;if(!(l&&c&&s&&a&&o&&d&&h))return e.flash("error","All fields are required!"),e.flash("vehicle_type",l),e.flash("color",c),e.flash("brand",s),e.flash("model",a),e.flash("plate_number",o),e.flash("image",d),e.flash("weight",h),r.redirect("/service_provider/edit_vehicle/"+i);Vehicle.exists({_id:{$ne:i},plate_number:o},(n,t)=>{if(t)return e.flash("error","You cannot edit a vehicle of another existing plate number!"),e.flash("vehicle_type",l),e.flash("color",c),e.flash("brand",s),e.flash("model",a),e.flash("image",d),e.flash("weight",h),r.redirect("/service_provider/edit_vehicle/"+i);Vehicle.findById(i,(r,i)=>{if(r)return console.log(r);i.vehicle_type=l,i.color=c,i.brand=s,i.plate_number=o,i.car_model=a,i.image=d,i.weight=h,i.save(r=>{if(r)return console.log(r);Vehicle.find(function(r,i){r?console.log(r):e.app.locals.vehicles=i})})}).then(l=>(e.flash("success","Vehicle edited!"),e.session.vehicleedited=!0,r.redirect("/service_provider/edit_vehicle/"+i))).catch(l=>(e.flash("error","Something went wrong!"),r.redirect("/service_provider/edit_vehicle/"+i)))})},delete(e,r){Vehicle.findByIdAndRemove(e.params.id,i=>{if(i)return console.log(i);Vehicle.find((r,i)=>{r?console.log(r):e.app.locals.vehicles=i}),r.redirect("/service_provider/vehicles/")})}}}const Vehicle=require("../../../models/vehicle"),Parcel=require("../../../models/parcel"),User=require("../../../models/user");module.exports=vehicleController;