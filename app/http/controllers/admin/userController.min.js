function userController(){return{async index(e,r){const s=e.session.useradded,a=e.session.usersearched,n=e.session.term_user;e.session.term_user=null,e.session.usersearched=null,e.session.useradded=null;const d=await User.find({});return r.render("admin/users",{users:d,userAdded:s,searchedUser:a,term:n})},async search(e,r){const{term:s}=e.body;if(!s)return r.redirect("/admin/users");await User.find({$text:{$search:s}},{score:{$meta:"textScore"}},(a,n)=>{if(a)return e.flash("error","Error! Something went wrong"),r.redirect("/admin/users");n.length||e.flash("blank",s)}).sort({score:{$meta:"textScore"}}).then(a=>(e.session.usersearched=a,e.session.term_user=s,r.redirect("/admin/users"))).catch(s=>(e.flash("error","Error! Something went wrong"),r.redirect("/admin/users")))},async addUser(e,r){const s=await CompanyName.find();return r.render("admin/add_user",{company_names:s})},async store(e,r){const{name:s,role:a,company_name:n,phone:d,address:o,email:i,password:t,confirm_password:l}=e.body;if(console.log(e.body),!(s&&n&&d&&o&&i&&t&&l))return e.flash("error","All fields are required!"),e.flash("name",s),e.flash("company_name",n),e.flash("phone",d),e.flash("address",o),e.flash("email",i),r.redirect("/admin/add_user");if(User.exists({email:i},(a,t)=>{if(t)return e.flash("error","Email already taken!"),e.flash("name",s),e.flash("company_name",n),e.flash("phone",d),e.flash("address",o),e.flash("email",i),r.redirect("/admin/add_user")}),t!=l)return e.flash("error","Password don't match!"),e.flash("name",s),e.flash("company_name",n),e.flash("phone",d),e.flash("address",o),e.flash("email",i),r.redirect("/admin/add_user");const m=await bcrypt.hash(t,10),c=new User({name:s,role:a,company_name:n,phone:d,address:o,email:i,password:m});c.save().then(e=>r.redirect("/admin/users")).catch(s=>(e.flash("error","Something went wrong!"),r.redirect("/admin/add_user")))},async deleteUser(e,r){const s=await User.findById(e.params.id);User.findOneAndDelete({name:s.name},e=>{if(e)return console.log(e)}),User.findByIdAndRemove(e.params.id,s=>s?console.log(s):(User.find((r,s)=>{r?console.log(r):e.app.locals.users=s}),r.redirect("/admin/users")))}}}const User=require("../../../models/user.js"),CompanyName=require("../../../models/service_provider"),bcrypt=require("bcrypt");module.exports=userController;